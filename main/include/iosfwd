#ifndef _SSTL_IOSFWD_
#define _SSTL_IOSFWD_

#include <cwchar>
#include <cstdio>

namespace std
{
	// forward declare char_traits.
	template <typename tValue>
	class char_traits;

	// forward declare streampos stuff
	template <typename tStateType>
	class fpos;

	typedef size_t streamsize;

	typedef long	 				streamoff;
	typedef long 					wstreamoff;
	typedef fpos<mbstate_t>			streampos;
	typedef fpos<mbstate_t>			wstreampos;	

	// forward declare all the iostream classes
	class ios_base;

	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_ios;

	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_streambuf;
	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_istream;
	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_ostream;
	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_iostream;
	
	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_stringbuf;
	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_istringstream;
	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_ostringstream;
	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_stringstream;

	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_filebuf;
	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_ofstream;
	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_ifstream;
	template <typename tCharType, typename tTraits = char_traits<tCharType> >
	class basic_fstream;

	// typedef specializations of char
	typedef basic_ios<char> 		ios;

	typedef basic_streambuf<char>		streambuf;
	typedef basic_istream<char>		istream;
	typedef basic_ostream<char>		ostream;
	typedef basic_iostream<char>		iostream;

	typedef basic_stringbuf<char>		stringbuf;
	typedef basic_istringstream<char>	istringstream;
	typedef basic_ostringstream<char>	ostringstream;
	typedef basic_stringstream<char>	stringstream;

	typedef basic_filebuf<char>		filebuf;
	typedef basic_ofstream<char>		ofstream;
	typedef basic_ifstream<char>		ifstream;
	typedef basic_fstream<char>		fstream;

	// and now typedef specializations for wchar_t
	typedef basic_ios<wchar_t> 		wios;

	typedef basic_streambuf<wchar_t>	wstreambuf;
	typedef basic_istream<wchar_t>		wistream;
	typedef basic_ostream<wchar_t>		wostream;
	typedef basic_iostream<wchar_t>		wiostream;

	typedef basic_stringbuf<wchar_t>	wstringbuf;
	typedef basic_istringstream<wchar_t>	wistringstream;
	typedef basic_ostringstream<wchar_t>	wostringstream;
	typedef basic_stringstream<wchar_t>	wstringstream;

	typedef basic_filebuf<wchar_t>		wfilebuf;
	typedef basic_ofstream<wchar_t>		wofstream;
	typedef basic_ifstream<wchar_t>		wifstream;
	typedef basic_fstream<wchar_t>		wfstream;
};

#endif
